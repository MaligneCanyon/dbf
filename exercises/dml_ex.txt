1.
> createdb workshop
> psql -d workshop

CREATE TABLE devices (
  id serial PRIMARY KEY,
  name text NOT NULL,
  created_at timestamp DEFAULT now()
);

CREATE TABLE parts (
  id serial PRIMARY KEY,
  part_number int UNIQUE NOT NULL,
  device_id int REFERENCES devices (id)
);

2.
INSERT INTO devices ("name") VALUES
  ('Accelerometer'),
  ('Gyroscope');

INSERT INTO parts (part_number, device_id) VALUES
  (1001, 1),
  (1002, 1),
  (1003, 1),
  (2001, 2),
  (2002, 2),
  (2003, 2),
  (2004, 2),
  (2005, 2),
  (3001, NULL),
  (3002, NULL),
  (3003, NULL)
;

3.
SELECT devices.name, parts.part_number
  FROM devices INNER JOIN parts ON devices.id = parts.device_id;

4.
SELECT * FROM parts WHERE part_number::text LIKE ('3%');

5.
SELECT devices.name, count(parts.device_id) AS number_of_parts
  FROM devices
    -- use a loj in case there is a device w/o any parts (unlikely)
    LEFT OUTER JOIN parts ON devices.id = parts.device_id
  GROUP BY devices.name;

6.
SELECT devices.name, count(parts.device_id)
  FROM devices
    JOIN parts ON devices.id = parts.device_id
  GROUP BY devices.name
  ORDER BY devices.name DESC;

7.
SELECT part_number, device_id FROM parts
  WHERE device_id IS NOT NULL;

SELECT part_number, device_id FROM parts
  WHERE device_id IS NULL;

8.
INSERT INTO devices (name) VALUES ('Magnetometer');
INSERT INTO parts (part_number, device_id) VALUES (4002, 3);

SELECT name FROM devices AS oldest_device
  ORDER BY age(created_at) DESC
  -- or use
  -- ORDER BY created_at
  LIMIT 1;

9.
-- verify the target first
SELECT * FROM parts WHERE device_id = 2 AND part_number > 2003;

-- then update the data
UPDATE parts SET device_id = 1 WHERE device_id = 2 AND part_number > 2003;

10.
-- verify the target first
SELECT * FROM parts WHERE device_id = 1;
SELECT * FROM devices WHERE id = 1;

-- then update the data
DELETE FROM parts WHERE device_id = 1;
DELETE FROM devices WHERE id = 1;

-- alternatively, could use
ALTER TABLE parts DROP CONSTRAINT parts_device_id_fkey;
ALTER TABLE parts ADD  CONSTRAINT parts_device_id_fkey
  FOREIGN KEY (device_id) REFERENCES devices (id) ON DELETE CASCADE;
ALTER COLUMN device_id SET ON DELETE CASCADE;
DELETE FROM devices WHERE id = 1; -- will also delete parts associated w/ that device

