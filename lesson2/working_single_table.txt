1.
CREATE TABLE people (
  name varchar(20),
  age integer,
  occupation varchar(20)
);

-- more realistically ...
CREATE TABLE people (
  id serial PRIMARY KEY,
  name varchar(30) NOT NULL,
  age int CHECK (age > 0),
  occupation varchar(30)
);

2.
INSERT INTO people (name, age, occupation) VALUES
  ('Abby', 34, 'biologist'),
  ('Mu''nisah', 26, NULL),
  ('Mirabell', 40, 'contractor');

3.
SELECT * FROM people WHERE name LIKE('Mu%');
SELECT * FROM people WHERE age = 26;
SELECT * FROM people WHERE occupation IS NULL;

4.
CREATE TABLE birds (
  name varchar(50) UNIQUE NOT NULL,
  length decimal(3,1) CHECK (length > 0),
  wingspan decimal(3,1) CHECK (wingspan > 0),
  family varchar(50),
  extinct boolean NOT NULL
);

5.
INSERT INTO birds VALUES
  ('Spotted Towhee',  21.6,  26.7,  'Emberizidae',  'f'),
  ('American Robin',  25.5,  36.0,  'Turdidae',  'f'),
  ('Greater Koa Finch',   19.0,  24.0,  'Fringillidae',  't'),
  ('Carolina Parakeet',   33.0,  55.8,  'Psittacidae',   't'),
  ('Common Kestrel',  35.5,  73.5,  'Falconidae',  'f');

6.
SELECT name, family FROM birds
  WHERE extinct = 'f'
  ORDER BY length DESC;

7.
SELECT
  round(avg(wingspan), 1) AS "avg", -- explicity name the col
  min(wingspan), -- col name is "min" by default
  max(wingspan)
  FROM birds;

8.
CREATE TABLE menu_items (
  item text, -- can use 'text' if the length is unknown
  prep_time int,
  ingredient_cost decimal(4,2), -- use 4,2 (not 3,2) to allow cost > 10
  sales int,
  menu_price decimal(4,2)
);

9.
INSERT INTO menu_items VALUES
  ('omelette',  10,  1.50,  182,   7.99),
  ('tacos',   5,   2.00,  254,   8.99),
  ('oatmeal',   1,   0.50,  79,  5.99);

10.
SELECT item, menu_price - ingredient_cost AS "profit" FROM menu_items ORDER BY profit DESC LIMIT 1;

11.
SELECT
  item,
  menu_price,
  ingredient_cost,
  round(prep_time / 60.0 * 13, 2) AS labour_cost,
  menu_price - ingredient_cost - round(prep_time / 60.0 * 13, 2) AS profit
FROM menu_items ORDER BY profit DESC;

Note: you can't access an alias later in the same select list

